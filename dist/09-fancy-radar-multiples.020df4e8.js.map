{"version":3,"sources":["scripts/homework-13/09-fancy-radar-multiples.js"],"names":[],"mappingsfile":"09-fancy-radar-multiples.020df4e8.js","sourceRoot":"../src","sourcesContent":["// import * as d3 from 'd3'\n\n// const margin = { top: 20, left: 0, right: 0, bottom: 0 }\n\n// const height = 330 - margin.top - margin.bottom\n// const width = 275 - margin.left - margin.right\n\n// const container = d3.select('#chart-9')\n\n// const angleScale = d3.scaleBand().range([0, Math.PI * 2])\n\n// const radius = 100\n\n// const radiusScale = d3\n//   .scaleLinear()\n//   .domain([0, 10])\n//   .range([0, radius])\n\n// const line = d3\n//   .radialArea()\n//   .angle(d => angleScale(d.name))\n//   .innerRadius(0)\n//   .outerRadius(d => radiusScale(d.value))\n\n// d3.csv(require('/data/homework-13/nba.csv'))\n//   .then(ready)\n//   .catch(err => console.log('Failed with', err))\n\n// function ready(datapoints) {\n\n//   const maxMinutes = 60\n//   const maxPoints = 30\n//   const max3Point = 5\n//   const maxRebounds = 15\n//   const maxSteals = 5\n//   const maxBlocks = 5\n\n//   const customDatapoints = [\n//     { name: 'Minutes', value: (datapoints.MP / maxMinutes) * 10 },\n//     { name: 'Points', value: (datapoints.PTS / maxPoints) * 10 },\n//     { name: 'Field Goals', value: datapoints.FG },\n//     { name: '3-Point Field Goals', value: (datapoints['3P'] / max3Point) * 10 },\n//     { name: 'Free Throws', value: datapoints.FT },\n//     { name: 'Rebounds', value: (datapoints.TRB / maxRebounds) * 10 },\n//     { name: 'Assists', value: datapoints.AST },\n//     { name: 'Steals', value: (datapoints.STL / maxSteals) * 10 },\n//     { name: 'Blocks', value: (datapoints.BLK / maxBlocks) * 10 }\n//   ]\n\n//   const categories = customDatapoints.map(d => d.name)\n//   angleScale.domain(categories)\n\n//   container\n//      .selectAll('svg')\n//     .data(datapoints)\n//     .enter()\n//    .append('svg')\n//      .attr('height', height + margin.top + margin.bottom)\n//      .attr('width', width + margin.left + margin.right)\n//   .append('g')\n//    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n//      .append('g')\n//    .attr('transform', `translate(${width / 2},${height / 2})`)\n//    .each(function(d) {\n//       console.log(datapoints)\n//        const svg = d3.select(this)\n      \n//   const bands = [2, 4, 6, 8, 10]\n//   // Draw a circle for each item in bands\n//   svg\n//     .selectAll('.band')\n//     .data(bands)\n//     .enter()\n//     .append('circle')\n//     .attr('fill', 'none')\n//     .attr('stroke', 'lightgrey')\n//     .attr('r', function(d) {\n//       return radiusScale(d)\n//     })\n//     .attr('fill', function(d, i) {\n//       console.log('Looking at circle number', i % 2)\n//       if (i % 2 === 0) {\n//         return '#c94435'\n//       } else {\n//         return '#FFB81C'\n//       }\n//     })\n//     //.attr('mask', 'url(#playerMask)')\n//     .lower()\n    \n//     // svg\n//     // .selectAll('.band')\n//     // .data(bands)\n//     // .enter()\n//     // .append('circle')\n//     // .attr('fill', 'none')\n//     // .attr('stroke', 'lightgrey')\n//     // .attr('r', function(d) {\n//     //   return radiusScale(d)\n//     // })\n//     // .attr('fill', function(d, i) {\n//     //   console.log('Looking at circle number', i % 2)\n//     //   if (i % 2 === 0) {\n//     //     return '#e8e7e5'\n//     //   } else {\n//     //     return '#f6f6f6'\n//     //   }\n//     // })\n//     // .lower()\n\n//     svg.\n//     append('text').text('0')\n//     .attr('text-anchor', 'middle')\n//     .attr('alignment-baseline', 'middle')\n\n//     svg\n//     .selectAll('.outside-label')\n//     .data(angleScale.domain())\n//     .enter()\n//     .append('text')\n//     .attr('font-weight', '700')\n//     .text(d => d)\n//     .attr('y', -radius) // set it up at the top of the chart\n//     .attr('dy', -15) // give a little offset to push it higher\n//     .attr('transform', function(d) {\n//       return `rotate(${(angleScale(d) * 180) / Math.PI})`\n//     })\n//     .attr('text-anchor', 'middle')\n//     .attr('alignment-baseline', 'middle')\n//     .style('font-size', 10)\n\n//     svg\n//     .append('mask')\n//     .datum(customDatapoints, function (d, i) {\n//       console.log(customDatapoints[i])\n//       return customDatapoints[i]})\n//     .attr('id', d.Name.replace(' ', '-'))\n//     .append('path')\n//     .attr('d', line)\n//     .attr('fill', 'white')\n//     .attr('stroke', 'white')\n\n//       })\n// }\n"]}